{"version":3,"sources":["node_modules/@webreflection/mapset/esm/index.js","node_modules/@webreflection/uparser/esm/index.js","node_modules/@webreflection/uwire/esm/index.js","node_modules/uarray/esm/index.js","node_modules/uhandlers/esm/index.js","node_modules/udomdiff/esm/index.js","node_modules/uhtml/esm/utils.js","node_modules/uhtml/esm/handlers.js","node_modules/uhtml/esm/rabbit.js","node_modules/uhtml/esm/index.js","node_modules/nanny-state/nanny.js","node_modules/jog-list/list.js","src/questions.js","src/index.js"],"names":["MapSet","Map","set","key","value","WeakMapSet","WeakMap","empty","elements","attributes","holes","template","prefix","svg","i","join","trim","replace","_","name","attrs","selfClosing","ml","trimEnd","length","test","hole","ELEMENT_NODE","nodeType","remove","firstChild","lastChild","range","document","createRange","setStartAfter","setEndAfter","deleteContents","diffable","node","operation","valueOf","persistent","fragment","childNodes","nodes","append","isArray","Array","indexOf","slice","useForeign","Foreign","constructor","handler","args","foreign","aria","values","removeAttribute","setAttribute","attribute","oldValue","orphan","attributeNode","createAttributeNS","newValue","removeAttributeNode","setAttributeNodeNS","boolean","data","dataset","event","lower","type","toLowerCase","info","removeEventListener","addEventListener","ref","current","setter","text","textContent","parentNode","a","b","get","before","bLength","aEnd","bEnd","aStart","bStart","map","nextSibling","insertBefore","has","removeChild","index","sequence","replaceChild","prototype","createDocumentFragment","createElement","createElementNS","createTextNode","createTreeWalker","importNode","Proxy","target","method","bind","createHTML","html","innerHTML","content","xml","createSVG","createContent","reducePath","diff","comment","oldNodes","newNodes","udomdiff","handleAnything","anyContent","String","handleAttribute","handlers","options","path","reduceRight","createPath","push","call","cache","textOnly","createCache","stack","entry","wire","createEntry","updates","mapUpdates","mapTemplate","instrument","tw","search","nextNode","hasAttribute","getAttribute","localName","unroll","unrollValues","Hole","splice","tag","keyed","Object","assign","for","id","memo","fixed","render","where","what","replaceChildren","Nanny","State","Path","window","location","pathname","Routes","Calculate","Evaluate","JSON","stringify","HTML","SVG","Update","newState","Rerender","Before","After","LocalStorageKey","localStorage","setItem","Debug","console","log","Render","findRoute","split","filter","char","reduce","obj","param","routes","find","r","params","route","title","update","view","Content","Element","body","View","getItem","parse","Link","preventDefault","href","history","pushState","Initiate","List","first","end","step","Math","floor","n","x","alphaRange","alphabet","stepRange","takeRange","second","replicate","item","cycle","list","flatMap","m","reverse","array","sort","sum","S","product","isEmpty","last","max","min","replaceAt","itemOut","itemIn","insert","prepend","removeAt","init","tail","take","numberOfItems","drop","numOfItems","unique","Set","isEqual","array1","array2","combine","func","flat","zip","Boolean","shuffle","random","questions","question","answers","image","vroom","Audio","screech","horn","state","score","total","playAgain","mistakes","play","QUESTIONS","includes","questionNumber","answer","submitAnswer","correct","findIndex","setTimeout","pause","currentTime","fredback","result","screenSize","innerWidth"],"mappings":"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AA,EAAQE,QAAAA,EAASG,QAAAA,EAASG,IAAAA,EAAKE,QAAAA,GAGtNnD,IAAAA,EAAAA,EAAAA,QAAAA,QAAAA;;ACkeAqD,aAAAA,OAAAA,eAAAA,QAAAA,aAAAA,CAAAA,OAAAA,IAAAA,QAAAA,aAAAA,EA9gBf,IAAMA,EAAY,CAChB,CACEC,SACE,4GACFC,QAAS,CACP,8BACA,oDACA,sDAGJ,CACED,SACE,yEACFC,QAAS,CACP,0CACA,sDACA,0EAGJ,CACED,SAAU,kEACVC,QAAS,CACP,wCACA,iDACA,mDAGJ,CACED,SAAU,6DACVC,QAAS,CACP,kBACA,oDACA,qCAGJ,CACED,SACE,kGACFC,QAAS,CACP,iCACA,iEACA,mEAGJ,CACED,SAAU,uDACVC,QAAS,CACP,qBACA,uCACA,kCAGJ,CACED,SACE,4GACFC,QAAS,CACP,iCACA,wEACA,qFAGJ,CACED,SACE,wHACFC,QAAS,CACP,qBACA,6EACA,gEAGJ,CACED,SACE,mGACFC,QAAS,CACP,qBACA,wBACA,sBAGJ,CACED,SACE,mEACFC,QAAS,CACP,mEACA,gEACA,4DAGJ,CACED,SAAU,sDACVC,QAAS,CACP,sCACA,6BACA,6CAGJ,CACED,SAAU,wCACVC,QAAS,CACP,oCACA,+CACA,sBAGJ,CACED,SACE,4EACFC,QAAS,CACP,SACA,SACA,yDAGJ,CACED,SAAU,iDACVC,QAAS,CACP,4BACA,+CACA,yDAGJ,CACED,SAAU,oCACVC,QAAS,CACP,qBACA,uCACA,mCAGJ,CACED,SAAU,iEACVC,QAAS,CACP,mCACA,+CACA,+CAGJ,CACED,SACE,mIACFC,QAAS,CACP,iBACA,qCACA,sCAGJ,CACED,SAAU,iEACVC,QAAS,CACP,kBACA,uCACA,+BAGJ,CACED,SACE,yGACFC,QAAS,CACP,4CACA,aACA,yDAGJ,CACED,SAAU,wDACVC,QAAS,CACP,2DACA,mEACA,oDAGJ,CACED,SACE,gFACFC,QAAS,CACP,yBACA,iDACA,sDAGJ,CACED,SAAU,4DACVC,QAAS,CACP,2CACA,0CACA,sDAGJ,CACED,SACE,+FACFC,QAAS,CACP,gDACA,6DACA,iGAGJ,CACED,SACE,yEACFC,QAAS,CACP,gEACA,+DACA,uEAGJ,CACED,SACE,6GACFC,QAAS,CACP,yCACA,2EACA,mEAGJ,CACED,SAAU,4DACVC,QAAS,CACP,gDACA,mCACA,kEAGJ,CACED,SAAU,4DACVC,QAAS,CACP,gDACA,mCACA,yEAGJ,CACED,SACE,6EACFC,QAAS,CACP,wCACA,wDACA,sDAGJ,CACED,SACE,4EACFC,QAAS,CACP,sDACA,yEACA,sEAGJ,CACED,SACE,qFACFC,QAAS,CACP,iEACA,sFACA,kDAGJ,CACED,SACE,6FACFC,QAAS,CACP,4DACA,kCACA,+FAGJ,CACED,SACE,iHACFC,QAAS,CACP,sCACA,4CACA,qEAGJ,CACED,SAAU,2DACVC,QAAS,CACP,wCACA,+BACA,4DAGJ,CACED,SAAU,+CACVC,QAAS,CACP,8BACA,2BACA,wCAGJ,CACED,SACE,sEACFC,QAAS,CACP,SACA,UACA,2DAGJ,CACED,SAAU,8DACVC,QAAS,CACP,gCACA,wDACA,0EAGJ,CACED,SACE,wFACFC,QAAS,CACP,8BACA,kDACA,4DAGJ,CACED,SACE,+FACFC,QAAS,CACP,kDACA,wFACA,uEAGJ,CACED,SACE,wFACFC,QAAS,CACP,iCACA,qBACA,oCAGJ,CACED,SACE,4GACFC,QAAS,CACP,sCACA,8DACA,oDAGJ,CACED,SACE,2GACFC,QAAS,CACP,eACA,cACA,0EAGJ,CACED,SACE,2EACFC,QAAS,CACP,qDACA,iEACA,yDAGJ,CACED,SAAU,iEACVC,QAAS,CACP,+CACA,sCACA,yBAGJ,CACED,SACE,mFACFC,QAAS,CACP,kCACA,2BACA,8DAGJ,CACED,SACE,2EACFC,QAAS,CACP,oDACA,kDACA,gDAGJ,CACED,SAAU,iEACVC,QAAS,CACP,gDACA,iDACA,wCAGJ,CACED,SACE,6FACFC,QAAS,CACP,eACA,mEACA,qBAGJ,CACED,SACE,sFACFC,QAAS,CACP,2DACA,yCACA,sFAGJ,CACED,SAAU,6DACVC,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","file":"src.a69cb424.js","sourceRoot":"..","sourcesContent":["export class MapSet extends Map {\n  set(key, value) {\n    super.set(key, value);\n    return value;\n  }\n}\n\nexport class WeakMapSet extends WeakMap {\n  set(key, value) {\n    super.set(key, value);\n    return value;\n  }\n}\n","/*! (c) Andrea Giammarchi - ISC */\nconst empty = /^(?:area|base|br|col|embed|hr|img|input|keygen|link|menuitem|meta|param|source|track|wbr)$/i;\nconst elements = /<([a-z]+[a-z0-9:._-]*)([^>]*?)(\\/?)>/g;\nconst attributes = /([^\\s\\\\>\"'=]+)\\s*=\\s*(['\"]?)\\x01/g;\nconst holes = /[\\x01\\x02]/g;\n\n// \\x01 Node.ELEMENT_NODE\n// \\x02 Node.ATTRIBUTE_NODE\n\n/**\n * Given a template, find holes as both nodes and attributes and\n * return a string with holes as either comment nodes or named attributes.\n * @param {string[]} template a template literal tag array\n * @param {string} prefix prefix to use per each comment/attribute\n * @param {boolean} svg enforces self-closing tags\n * @returns {string} X/HTML with prefixed comments or attributes\n */\nexport default (template, prefix, svg) => {\n  let i = 0;\n  return template\n          .join('\\x01')\n          .trim()\n          .replace(\n            elements,\n            (_, name, attrs, selfClosing) => {\n              let ml = name + attrs.replace(attributes, '\\x02=$2$1').trimEnd();\n              if (selfClosing.length)\n                ml += (svg || empty.test(name)) ? ' /' : ('></' + name);\n              return '<' + ml + '>';\n            }\n          )\n          .replace(\n            holes,\n            hole => hole === '\\x01' ?\n              ('<!--' + prefix + i++ + '-->') :\n              (prefix + i++)\n          );\n};\n","const ELEMENT_NODE = 1;\nconst nodeType = 111;\n\nconst remove = ({firstChild, lastChild}) => {\n  const range = document.createRange();\n  range.setStartAfter(firstChild);\n  range.setEndAfter(lastChild);\n  range.deleteContents();\n  return firstChild;\n};\n\nexport const diffable = (node, operation) => node.nodeType === nodeType ?\n  ((1 / operation) < 0 ?\n    (operation ? remove(node) : node.lastChild) :\n    (operation ? node.valueOf() : node.firstChild)) :\n  node\n;\n\nexport const persistent = fragment => {\n  const {firstChild, lastChild} = fragment;\n  if (firstChild === lastChild)\n    return lastChild || fragment;\n  const {childNodes} = fragment;\n  const nodes = [...childNodes];\n  return {\n    ELEMENT_NODE,\n    nodeType,\n    firstChild,\n    lastChild,\n    valueOf() {\n      if (childNodes.length !== nodes.length)\n        fragment.append(...nodes);\n      return fragment;\n    }\n  };\n};\n","const {isArray} = Array;\nconst {indexOf, slice} = [];\n\nexport {isArray, indexOf, slice};\n","import {isArray} from 'uarray';\n\n// flag for foreign checks (slower path, fast by default)\nlet useForeign = false;\n\nexport class Foreign {\n  constructor(handler, value) {\n    useForeign = true;\n    this._ = (...args) => handler(...args, value);\n  }\n}\n\nexport const foreign = (handler, value) => new Foreign(handler, value);\n\nexport const aria = node => values => {\n  for (const key in values) {\n    const name = key === 'role' ? key : `aria-${key}`;\n    const value = values[key];\n    if (value == null)\n      node.removeAttribute(name);\n    else\n      node.setAttribute(name, value);\n  }\n};\n\nexport const attribute = (node, name) => {\n  let oldValue, orphan = true;\n  const attributeNode = document.createAttributeNS(null, name);\n  return newValue => {\n    if (oldValue !== newValue) {\n      oldValue = newValue;\n      if (oldValue == null) {\n        if (!orphan) {\n          node.removeAttributeNode(attributeNode);\n          orphan = true;\n        }\n      }\n      else {\n        const value = useForeign && (newValue instanceof Foreign) ?\n                        newValue._(node, name) : newValue;\n        if (value == null) {\n          if (!orphan)\n            node.removeAttributeNode(attributeNode);\n            orphan = true;\n        }\n        else {\n          attributeNode.value = value;\n          if (orphan) {\n            node.setAttributeNodeNS(attributeNode);\n            orphan = false;\n          }\n        }\n      }\n    }\n  };\n};\n\nexport const boolean = (node, key, oldValue) => newValue => {\n  if (oldValue !== !!newValue) {\n    // when IE won't be around anymore ...\n    // node.toggleAttribute(key, oldValue = !!newValue);\n    if ((oldValue = !!newValue))\n      node.setAttribute(key, '');\n    else\n      node.removeAttribute(key);\n  }\n};\n\nexport const data = ({dataset}) => values => {\n  for (const key in values) {\n    const value = values[key];\n    if (value == null)\n      delete dataset[key];\n    else\n      dataset[key] = value;\n  }\n};\n\nexport const event = (node, name) => {\n  let oldValue, lower, type = name.slice(2);\n  if (!(name in node) && (lower = name.toLowerCase()) in node)\n    type = lower.slice(2);\n  return newValue => {\n    const info = isArray(newValue) ? newValue : [newValue, false];\n    if (oldValue !== info[0]) {\n      if (oldValue)\n        node.removeEventListener(type, oldValue, info[1]);\n      if (oldValue = info[0])\n        node.addEventListener(type, oldValue, info[1]);\n    }\n  };\n};\n\nexport const ref = node => {\n  let oldValue;\n  return value => {\n    if (oldValue !== value) {\n      oldValue = value;\n      if (typeof value === 'function')\n        value(node);\n      else\n        value.current = node;\n    }\n  };\n};\n\nexport const setter = (node, key) => key === 'dataset' ?\n  data(node) :\n  value => {\n    node[key] = value;\n  };\n\nexport const text = node => {\n  let oldValue;\n  return newValue => {\n    if (oldValue != newValue) {\n      oldValue = newValue;\n      node.textContent = newValue == null ? '' : newValue;\n    }\n  };\n};\n","/**\n * ISC License\n *\n * Copyright (c) 2020, Andrea Giammarchi, @WebReflection\n *\n * Permission to use, copy, modify, and/or distribute this software for any\n * purpose with or without fee is hereby granted, provided that the above\n * copyright notice and this permission notice appear in all copies.\n *\n * THE SOFTWARE IS PROVIDED \"AS IS\" AND THE AUTHOR DISCLAIMS ALL WARRANTIES WITH\n * REGARD TO THIS SOFTWARE INCLUDING ALL IMPLIED WARRANTIES OF MERCHANTABILITY\n * AND FITNESS. IN NO EVENT SHALL THE AUTHOR BE LIABLE FOR ANY SPECIAL, DIRECT,\n * INDIRECT, OR CONSEQUENTIAL DAMAGES OR ANY DAMAGES WHATSOEVER RESULTING FROM\n * LOSS OF USE, DATA OR PROFITS, WHETHER IN AN ACTION OF CONTRACT, NEGLIGENCE\n * OR OTHER TORTIOUS ACTION, ARISING OUT OF OR IN CONNECTION WITH THE USE OR\n * PERFORMANCE OF THIS SOFTWARE.\n */\n\n/**\n * @param {Node} parentNode The container where children live\n * @param {Node[]} a The list of current/live children\n * @param {Node[]} b The list of future children\n * @param {(entry: Node, action: number) => Node} get\n * The callback invoked per each entry related DOM operation.\n * @param {Node} [before] The optional node used as anchor to insert before.\n * @returns {Node[]} The same list of future children.\n */\nexport default (parentNode, a, b, get, before) => {\n  const bLength = b.length;\n  let aEnd = a.length;\n  let bEnd = bLength;\n  let aStart = 0;\n  let bStart = 0;\n  let map = null;\n  while (aStart < aEnd || bStart < bEnd) {\n    // append head, tail, or nodes in between: fast path\n    if (aEnd === aStart) {\n      // we could be in a situation where the rest of nodes that\n      // need to be added are not at the end, and in such case\n      // the node to `insertBefore`, if the index is more than 0\n      // must be retrieved, otherwise it's gonna be the first item.\n      const node = bEnd < bLength ?\n        (bStart ?\n          (get(b[bStart - 1], -0).nextSibling) :\n          get(b[bEnd - bStart], 0)) :\n        before;\n      while (bStart < bEnd)\n        parentNode.insertBefore(get(b[bStart++], 1), node);\n    }\n    // remove head or tail: fast path\n    else if (bEnd === bStart) {\n      while (aStart < aEnd) {\n        // remove the node only if it's unknown or not live\n        if (!map || !map.has(a[aStart]))\n          parentNode.removeChild(get(a[aStart], -1));\n        aStart++;\n      }\n    }\n    // same node: fast path\n    else if (a[aStart] === b[bStart]) {\n      aStart++;\n      bStart++;\n    }\n    // same tail: fast path\n    else if (a[aEnd - 1] === b[bEnd - 1]) {\n      aEnd--;\n      bEnd--;\n    }\n    // The once here single last swap \"fast path\" has been removed in v1.1.0\n    // https://github.com/WebReflection/udomdiff/blob/single-final-swap/esm/index.js#L69-L85\n    // reverse swap: also fast path\n    else if (\n      a[aStart] === b[bEnd - 1] &&\n      b[bStart] === a[aEnd - 1]\n    ) {\n      // this is a \"shrink\" operation that could happen in these cases:\n      // [1, 2, 3, 4, 5]\n      // [1, 4, 3, 2, 5]\n      // or asymmetric too\n      // [1, 2, 3, 4, 5]\n      // [1, 2, 3, 5, 6, 4]\n      const node = get(a[--aEnd], -1).nextSibling;\n      parentNode.insertBefore(\n        get(b[bStart++], 1),\n        get(a[aStart++], -1).nextSibling\n      );\n      parentNode.insertBefore(get(b[--bEnd], 1), node);\n      // mark the future index as identical (yeah, it's dirty, but cheap 👍)\n      // The main reason to do this, is that when a[aEnd] will be reached,\n      // the loop will likely be on the fast path, as identical to b[bEnd].\n      // In the best case scenario, the next loop will skip the tail,\n      // but in the worst one, this node will be considered as already\n      // processed, bailing out pretty quickly from the map index check\n      a[aEnd] = b[bEnd];\n    }\n    // map based fallback, \"slow\" path\n    else {\n      // the map requires an O(bEnd - bStart) operation once\n      // to store all future nodes indexes for later purposes.\n      // In the worst case scenario, this is a full O(N) cost,\n      // and such scenario happens at least when all nodes are different,\n      // but also if both first and last items of the lists are different\n      if (!map) {\n        map = new Map;\n        let i = bStart;\n        while (i < bEnd)\n          map.set(b[i], i++);\n      }\n      // if it's a future node, hence it needs some handling\n      if (map.has(a[aStart])) {\n        // grab the index of such node, 'cause it might have been processed\n        const index = map.get(a[aStart]);\n        // if it's not already processed, look on demand for the next LCS\n        if (bStart < index && index < bEnd) {\n          let i = aStart;\n          // counts the amount of nodes that are the same in the future\n          let sequence = 1;\n          while (++i < aEnd && i < bEnd && map.get(a[i]) === (index + sequence))\n            sequence++;\n          // effort decision here: if the sequence is longer than replaces\n          // needed to reach such sequence, which would brings again this loop\n          // to the fast path, prepend the difference before a sequence,\n          // and move only the future list index forward, so that aStart\n          // and bStart will be aligned again, hence on the fast path.\n          // An example considering aStart and bStart are both 0:\n          // a: [1, 2, 3, 4]\n          // b: [7, 1, 2, 3, 6]\n          // this would place 7 before 1 and, from that time on, 1, 2, and 3\n          // will be processed at zero cost\n          if (sequence > (index - bStart)) {\n            const node = get(a[aStart], 0);\n            while (bStart < index)\n              parentNode.insertBefore(get(b[bStart++], 1), node);\n          }\n          // if the effort wasn't good enough, fallback to a replace,\n          // moving both source and target indexes forward, hoping that some\n          // similar node will be found later on, to go back to the fast path\n          else {\n            parentNode.replaceChild(\n              get(b[bStart++], 1),\n              get(a[aStart++], -1)\n            );\n          }\n        }\n        // otherwise move the source forward, 'cause there's nothing to do\n        else\n          aStart++;\n      }\n      // this node has no meaning in the future list, so it's more than safe\n      // to remove it, and check the next live node out instead, meaning\n      // that only the live list index should be forwarded\n      else\n        parentNode.removeChild(get(a[aStart++], -1));\n    }\n  }\n  return b;\n};\n","const {isArray, prototype} = Array;\nconst {indexOf} = prototype;\n\nexport {isArray, indexOf};\n\nconst {\n  createDocumentFragment,\n  createElement,\n  createElementNS,\n  createTextNode,\n  createTreeWalker,\n  importNode\n} = new Proxy(document, {\n  get: (target, method) => target[method].bind(target)\n});\n\nexport {createTextNode, createTreeWalker, importNode};\n\nconst createHTML = html => {\n  const template = createElement('template');\n  template.innerHTML = html;\n  return template.content;\n};\n\nlet xml;\nconst createSVG = svg => {\n  if (!xml) xml = createElementNS('http://www.w3.org/2000/svg', 'svg');\n  xml.innerHTML = svg;\n  const content = createDocumentFragment();\n  content.append(...xml.childNodes);\n  return content;\n};\n\nexport const createContent = (text, svg) => svg ?\n                              createSVG(text) : createHTML(text);\n","import {diffable} from '@webreflection/uwire';\n\nimport {aria, attribute, boolean, event, ref, setter, text} from 'uhandlers';\nimport udomdiff from 'udomdiff';\n\nimport {isArray, createTextNode} from './utils.js';\n\n// from a generic path, retrieves the exact targeted node\nconst reducePath = ({childNodes}, i) => childNodes[i];\n\n// this helper avoid code bloat around handleAnything() callback\nconst diff = (comment, oldNodes, newNodes) => udomdiff(\n  comment.parentNode,\n  // TODO: there is a possible edge case where a node has been\n  //       removed manually, or it was a keyed one, attached\n  //       to a shared reference between renders.\n  //       In this case udomdiff might fail at removing such node\n  //       as its parent won't be the expected one.\n  //       The best way to avoid this issue is to filter oldNodes\n  //       in search of those not live, or not in the current parent\n  //       anymore, but this would require both a change to uwire,\n  //       exposing a parentNode from the firstChild, as example,\n  //       but also a filter per each diff that should exclude nodes\n  //       that are not in there, penalizing performance quite a lot.\n  //       As this has been also a potential issue with domdiff,\n  //       and both lighterhtml and hyperHTML might fail with this\n  //       very specific edge case, I might as well document this possible\n  //       \"diffing shenanigan\" and call it a day.\n  oldNodes,\n  newNodes,\n  diffable,\n  comment\n);\n\n// if an interpolation represents a comment, the whole\n// diffing will be related to such comment.\n// This helper is in charge of understanding how the new\n// content for such interpolation/hole should be updated\nconst handleAnything = comment => {\n  let oldValue, text, nodes = [];\n  const anyContent = newValue => {\n    switch (typeof newValue) {\n      // primitives are handled as text content\n      case 'string':\n      case 'number':\n      case 'boolean':\n        if (oldValue !== newValue) {\n          oldValue = newValue;\n          if (!text)\n            text = createTextNode('');\n          text.data = newValue;\n          nodes = diff(comment, nodes, [text]);\n        }\n        break;\n      // null, and undefined are used to cleanup previous content\n      case 'object':\n      case 'undefined':\n        if (newValue == null) {\n          if (oldValue != newValue) {\n            oldValue = newValue;\n            nodes = diff(comment, nodes, []);\n          }\n          break;\n        }\n        // arrays and nodes have a special treatment\n        if (isArray(newValue)) {\n          oldValue = newValue;\n          // arrays can be used to cleanup, if empty\n          if (newValue.length === 0)\n            nodes = diff(comment, nodes, []);\n          // or diffed, if these contains nodes or \"wires\"\n          else if (typeof newValue[0] === 'object')\n            nodes = diff(comment, nodes, newValue);\n          // in all other cases the content is stringified as is\n          else\n            anyContent(String(newValue));\n          break;\n        }\n        // if the new value is a DOM node, or a wire, and it's\n        // different from the one already live, then it's diffed.\n        // if the node is a fragment, it's appended once via its childNodes\n        // There is no `else` here, meaning if the content\n        // is not expected one, nothing happens, as easy as that.\n        if (oldValue !== newValue && 'ELEMENT_NODE' in newValue) {\n          oldValue = newValue;\n          nodes = diff(\n            comment,\n            nodes,\n            newValue.nodeType === 11 ?\n              [...newValue.childNodes] :\n              [newValue]\n          );\n        }\n        break;\n      case 'function':\n        anyContent(newValue(comment));\n        break;\n    }\n  };\n  return anyContent;\n};\n\n// attributes can be:\n//  * ref=${...}      for hooks and other purposes\n//  * aria=${...}     for aria attributes\n//  * ?boolean=${...} for boolean attributes\n//  * .dataset=${...} for dataset related attributes\n//  * .setter=${...}  for Custom Elements setters or nodes with setters\n//                    such as buttons, details, options, select, etc\n//  * @event=${...}   to explicitly handle event listeners\n//  * onevent=${...}  to automatically handle event listeners\n//  * generic=${...}  to handle an attribute just like an attribute\nconst handleAttribute = (node, name/*, svg*/) => {\n  switch (name[0]) {\n    case '?': return boolean(node, name.slice(1), false);\n    case '.': return setter(node, name.slice(1));\n    case '@': return event(node, 'on' + name.slice(1));\n    case 'o': if (name[1] === 'n') return event(node, name);\n  }\n\n  switch (name) {\n    case 'ref': return ref(node);\n    case 'aria': return aria(node);\n  }\n\n  return attribute(node, name/*, svg*/);\n};\n\n// each mapped update carries the update type and its path\n// the type is either node, attribute, or text, while\n// the path is how to retrieve the related node to update.\n// In the attribute case, the attribute name is also carried along.\nexport function handlers(options) {\n  const {type, path} = options;\n  const node = path.reduceRight(reducePath, this);\n  return type === 'node' ?\n    handleAnything(node) :\n    (type === 'attr' ?\n      handleAttribute(node, options.name/*, options.svg*/) :\n      text(node));\n};\n","import {WeakMapSet} from '@webreflection/mapset';\nimport instrument from '@webreflection/uparser';\nimport {persistent} from '@webreflection/uwire';\n\nimport {handlers} from './handlers.js';\nimport {isArray, indexOf, createContent, createTreeWalker, importNode} from './utils.js';\n\n// from a fragment container, create an array of indexes\n// related to its child nodes, so that it's possible\n// to retrieve later on exact node via reducePath\nconst createPath = node => {\n  const path = [];\n  let {parentNode} = node;\n  while (parentNode) {\n    path.push(indexOf.call(parentNode.childNodes, node));\n    node = parentNode;\n    ({parentNode} = node);\n  }\n  return path;\n};\n\n// the prefix is used to identify either comments, attributes, or nodes\n// that contain the related unique id. In the attribute cases\n// isµX=\"attribute-name\" will be used to map current X update to that\n// attribute name, while comments will be like <!--isµX-->, to map\n// the update to that specific comment node, hence its parent.\n// style and textarea will have <!--isµX--> text content, and are handled\n// directly through text-only updates.\nconst prefix = 'isµ';\n\n// Template Literals are unique per scope and static, meaning a template\n// should be parsed once, and once only, as it will always represent the same\n// content, within the exact same amount of updates each time.\n// This cache relates each template to its unique content and updates.\nconst cache = new WeakMapSet;\n\n// a RegExp that helps checking nodes that cannot contain comments\nconst textOnly = /^(?:textarea|script|style|title|plaintext|xmp)$/;\n\nexport const createCache = () => ({\n  stack: [],    // each template gets a stack for each interpolation \"hole\"\n\n  entry: null,  // each entry contains details, such as:\n                //  * the template that is representing\n                //  * the type of node it represents (html or svg)\n                //  * the content fragment with all nodes\n                //  * the list of updates per each node (template holes)\n                //  * the \"wired\" node or fragment that will get updates\n                // if the template or type are different from the previous one\n                // the entry gets re-created each time\n\n  wire: null    // each rendered node represent some wired content and\n                // this reference to the latest one. If different, the node\n                // will be cleaned up and the new \"wire\" will be appended\n});\n\n// the entry stored in the rendered node cache, and per each \"hole\"\nconst createEntry = (type, template) => {\n  const {content, updates} = mapUpdates(type, template);\n  return {type, template, content, updates, wire: null};\n};\n\n// a template is instrumented to be able to retrieve where updates are needed.\n// Each unique template becomes a fragment, cloned once per each other\n// operation based on the same template, i.e. data => html`<p>${data}</p>`\nconst mapTemplate = (type, template) => {\n  const svg = type === 'svg';\n  const text = instrument(template, prefix, svg);\n  const content = createContent(text, svg);\n  // once instrumented and reproduced as fragment, it's crawled\n  // to find out where each update is in the fragment tree\n  const tw = createTreeWalker(content, 1 | 128);\n  const nodes = [];\n  const length = template.length - 1;\n  let i = 0;\n  // updates are searched via unique names, linearly increased across the tree\n  // <div isµ0=\"attr\" isµ1=\"other\"><!--isµ2--><style><!--isµ3--</style></div>\n  let search = `${prefix}${i}`;\n  while (i < length) {\n    const node = tw.nextNode();\n    // if not all updates are bound but there's nothing else to crawl\n    // it means that there is something wrong with the template.\n    if (!node)\n      throw `bad template: ${text}`;\n    // if the current node is a comment, and it contains isµX\n    // it means the update should take care of any content\n    if (node.nodeType === 8) {\n      // The only comments to be considered are those\n      // which content is exactly the same as the searched one.\n      if (node.data === search) {\n        nodes.push({type: 'node', path: createPath(node)});\n        search = `${prefix}${++i}`;\n      }\n    }\n    else {\n      // if the node is not a comment, loop through all its attributes\n      // named isµX and relate attribute updates to this node and the\n      // attribute name, retrieved through node.getAttribute(\"isµX\")\n      // the isµX attribute will be removed as irrelevant for the layout\n      // let svg = -1;\n      while (node.hasAttribute(search)) {\n        nodes.push({\n          type: 'attr',\n          path: createPath(node),\n          name: node.getAttribute(search)\n        });\n        node.removeAttribute(search);\n        search = `${prefix}${++i}`;\n      }\n      // if the node was a style, textarea, or others, check its content\n      // and if it is <!--isµX--> then update tex-only this node\n      if (\n        textOnly.test(node.localName) &&\n        node.textContent.trim() === `<!--${search}-->`\n      ){\n        node.textContent = '';\n        nodes.push({type: 'text', path: createPath(node)});\n        search = `${prefix}${++i}`;\n      }\n    }\n  }\n  // once all nodes to update, or their attributes, are known, the content\n  // will be cloned in the future to represent the template, and all updates\n  // related to such content retrieved right away without needing to re-crawl\n  // the exact same template, and its content, more than once.\n  return {content, nodes};\n};\n\n// if a template is unknown, perform the previous mapping, otherwise grab\n// its details such as the fragment with all nodes, and updates info.\nconst mapUpdates = (type, template) => {\n  const {content, nodes} = (\n    cache.get(template) ||\n    cache.set(template, mapTemplate(type, template))\n  );\n  // clone deeply the fragment\n  const fragment = importNode(content, true);\n  // and relate an update handler per each node that needs one\n  const updates = nodes.map(handlers, fragment);\n  // return the fragment and all updates to use within its nodes\n  return {content: fragment, updates};\n};\n\n// as html and svg can be nested calls, but no parent node is known\n// until rendered somewhere, the unroll operation is needed to\n// discover what to do with each interpolation, which will result\n// into an update operation.\nexport const unroll = (info, {type, template, values}) => {\n  // interpolations can contain holes and arrays, so these need\n  // to be recursively discovered\n  const length = unrollValues(info, values);\n  let {entry} = info;\n  // if the cache entry is either null or different from the template\n  // and the type this unroll should resolve, create a new entry\n  // assigning a new content fragment and the list of updates.\n  if (!entry || (entry.template !== template || entry.type !== type))\n    info.entry = (entry = createEntry(type, template));\n  const {content, updates, wire} = entry;\n  // even if the fragment and its nodes is not live yet,\n  // it is already possible to update via interpolations values.\n  for (let i = 0; i < length; i++)\n    updates[i](values[i]);\n  // if the entry was new, or representing a different template or type,\n  // create a new persistent entity to use during diffing.\n  // This is simply a DOM node, when the template has a single container,\n  // as in `<p></p>`, or a \"wire\" in `<p></p><p></p>` and similar cases.\n  return wire || (entry.wire = persistent(content));\n};\n\n// the stack retains, per each interpolation value, the cache\n// related to each interpolation value, or null, if the render\n// was conditional and the value is not special (Array or Hole)\nconst unrollValues = ({stack}, values) => {\n  const {length} = values;\n  for (let i = 0; i < length; i++) {\n    const hole = values[i];\n    // each Hole gets unrolled and re-assigned as value\n    // so that domdiff will deal with a node/wire, not with a hole\n    if (hole instanceof Hole)\n      values[i] = unroll(\n        stack[i] || (stack[i] = createCache()),\n        hole\n      );\n    // arrays are recursively resolved so that each entry will contain\n    // also a DOM node or a wire, hence it can be diffed if/when needed\n    else if (isArray(hole))\n      unrollValues(stack[i] || (stack[i] = createCache()), hole);\n    // if the value is nothing special, the stack doesn't need to retain data\n    // this is useful also to cleanup previously retained data, if the value\n    // was a Hole, or an Array, but not anymore, i.e.:\n    // const update = content => html`<div>${content}</div>`;\n    // update(listOfItems); update(null); update(html`hole`)\n    else\n      stack[i] = null;\n  }\n  if (length < stack.length)\n    stack.splice(length);\n  return length;\n};\n\n/**\n * Holds all details wrappers needed to render the content further on.\n * @constructor\n * @param {string} type The hole type, either `html` or `svg`.\n * @param {string[]} template The template literals used to the define the content.\n * @param {Array} values Zero, one, or more interpolated values to render.\n */\nexport class Hole {\n  constructor(type, template, values) {\n    this.type = type;\n    this.template = template;\n    this.values = values;\n  }\n};\n","import {MapSet, WeakMapSet} from '@webreflection/mapset';\n\nimport {Hole, createCache, unroll} from './rabbit.js';\n\n// both `html` and `svg` template literal tags are polluted\n// with a `for(ref[, id])` and a `node` tag too\nconst tag = type => {\n  // both `html` and `svg` tags have their own cache\n  const keyed = new WeakMapSet;\n  // keyed operations always re-use the same cache and unroll\n  // the template and its interpolations right away\n  const fixed = cache => (template, ...values) => unroll(\n    cache,\n    {type, template, values}\n  );\n  return Object.assign(\n    // non keyed operations are recognized as instance of Hole\n    // during the \"unroll\", recursively resolved and updated\n    (template, ...values) => new Hole(type, template, values),\n    {\n      // keyed operations need a reference object, usually the parent node\n      // which is showing keyed results, and optionally a unique id per each\n      // related node, handy with JSON results and mutable list of objects\n      // that usually carry a unique identifier\n      for(ref, id) {\n        const memo = keyed.get(ref) || keyed.set(ref, new MapSet);\n        return memo.get(id) || memo.set(id, fixed(createCache()));\n      },\n      // it is possible to create one-off content out of the box via node tag\n      // this might return the single created node, or a fragment with all\n      // nodes present at the root level and, of course, their child nodes\n      node: (template, ...values) => unroll(createCache(), new Hole(type, template, values)).valueOf()\n    }\n  );\n};\n\n// each rendered node gets its own cache\nconst cache = new WeakMapSet;\n\n// rendering means understanding what `html` or `svg` tags returned\n// and it relates a specific node to its own unique cache.\n// Each time the content to render changes, the node is cleaned up\n// and the new new content is appended, and if such content is a Hole\n// then it's \"unrolled\" to resolve all its inner nodes.\nconst render = (where, what) => {\n  const hole = typeof what === 'function' ? what() : what;\n  const info = cache.get(where) || cache.set(where, createCache());\n  const wire = hole instanceof Hole ? unroll(info, hole) : hole;\n  if (wire !== info.wire) {\n    info.wire = wire;\n    // valueOf() simply returns the node itself, but in case it was a \"wire\"\n    // it will eventually re-append all nodes to its fragment so that such\n    // fragment can be re-appended many times in a meaningful way\n    // (wires are basically persistent fragments facades with special behavior)\n    where.replaceChildren(wire.valueOf());\n  }\n  return where;\n};\n\nconst html = tag('html');\nconst svg = tag('svg');\n\nexport {Hole, render, html, svg};\n","import {html, svg, render} from 'uhtml';\n\nexport default function Nanny(State, Path = window.location.pathname){\n  const  Routes = State.Routes || [];\n  \n  State = { ...State, ...(State.Calculate ? State.Calculate(State) : {}) };\n  State.Evaluate = () => ({...State});\n  State.JSON = () => JSON.stringify(State);\n  State.HTML = html;\n  State.SVG = svg; \n  State.Update = (newState,Rerender=true) => {\n\n    if (State.Before) {\n      State = { ...State, ...State.Before(State) };\n    }\n\n    State = { ...State, ...(typeof newState === \"function\" ? newState(State) : newState), ...(State.Calculate ? State.Calculate({...State,...(typeof newState === \"function\" ? newState(State) : newState)}) : {}) };\n\n    if (State.After) {\n      State = { ...State, ...State.After(State) };\n    }\n\n    if (State.LocalStorageKey){\n      localStorage.setItem(State.LocalStorageKey,JSON.stringify(State));\n    }\n\n    if (State.Debug) {\n      console.log(State.JSON());\n    } \n    \n    // Re-render the view basd on updated state\n    if (Rerender) {\n      Render();\n    }\n\n    return State;\n  };\n       \n  // Helper function to find the route object in the state given the path\n  const findRoute = path => (path === '/' ? ['/'] : path.split('/').filter(char => char !== ''))\n  .reduce(\n    (obj, path) => {     \n     const param = obj.routes.find(r => r.path[0] === ':');\n     return obj.routes.find(r => r.path === path)\n        ? {...obj.routes.find(r => r.path === path),params: obj.params}\n        : { ...param, params: {...obj.params,[param.path.slice(1)]: path} }\n    },{ routes: Routes }\n  );\n\n  function Render() {\n    if (Routes.length){\n      const route = findRoute(Path);\n      document.title = route.title || document.title\n      if (route.update) {\n        State = { ...State, ...(route.params ? route.update(route.params)(State) : route.update(State)) };\n      }\n      if (route.view) {\n        State.Content = route.view(State);\n      }\n    }\n    render(State.Element || document.body, State.View(State));\n  }\n\n  // Retrieve state from local storage.\n  if (State.LocalStorageKey && localStorage.getItem(State.LocalStorageKey)) {\n    State =  {...State,...JSON.parse(localStorage.getItem(State.LocalStorageKey))} \n  }\n\n  if (Routes.length) {\n      // append Route method to State\n      State.Link = path => event => {\n        event.preventDefault();\n        Path = path || event.target.attributes.href.value;\n        window.history.pushState({ Path }, Path, `${Path}`);\n        Render();\n      };\n      // grab the path from the address bar\n      window.addEventListener(\"popstate\", event => {\n        Path = window.location.pathname;\n        Render();\n      });\n  }\n\n  // Run any setup code once\n  if (State.Initiate) {\n    State = { ...State, ...State.Initiate(State) };\n  }\n\n  // Render view based on initial state.\n  Render();\n\n  if (State.Debug) {\n    console.log(State.JSON());\n  }\n  \n  return State.Update\n}\n\nexport { Nanny, html, svg }\nexport { html as HTML, svg as SVG}","export const range = (first,end, step=1) => [...Array(Math.floor(end/step))].map((n,i)=> first + i*step).filter(x=> x<=end)\r\nexport const alphaRange = (first,end, alphabet=[...'ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz']) => alphabet.slice(alphabet.indexOf(first), alphabet.indexOf(end)+1)\r\nexport const stepRange = (first, end, step) => [...Array(Math.floor(end/step))].map((n,i)=> (i+1)*step)\r\nexport const takeRange = (first, second, length) => [...Array(length)].map((n,i)=> first + i*(second-first))\r\nexport const replicate = (item, length) => [...Array(length)].map(n=> item)\r\nexport const cycle = (list, length) => [...Array(length)].flatMap(n=> list).filter((m,i)=> i < length)\r\nexport const reverse = array => [...array].reverse()\r\nexport const sort = array => [...array].sort((a,b)=> a - b)\r\nexport const sum = array => array.reduce((S,n)=> S+n,0)\r\nexport const product =  array => array.reduce((S,n)=> S*n)\r\nexport const isEmpty = array => array.length === 0\r\nexport const first = array => array[0]\r\nexport const last = array => array[array.length -1]\r\nexport const max = array => Math.max(...array)\r\nexport const min = array => Math.min(...array)\r\nexport const replaceAt = (array, index, item) => [...array.slice(0,index),item,...array.slice(index+1, array.length)]\r\nexport const replace = (array, itemOut, itemIn) => array.map(n => n === itemOut ? itemIn : n)\r\nexport const insert = (array, index, item) => [...array.slice(0,index), item,...array.slice(index, array.length)]\r\nexport const append = (array, item) => [...array,item]\r\nexport const prepend = (array, item) => [item,...array]\r\nexport const remove = (array, item) => array.filter(n=> n !== item)\r\nexport const removeAt = (array, index) => array.filter((n,i) => i !== index)\r\nexport const init = array => array.slice(0, array.length-1) \r\nexport const tail = array => array.slice(1, array.length)\r\nexport const take = (array, numberOfItems) => array.slice(0, numberOfItems)\r\nexport const drop = (array, numOfItems) => array.slice(numOfItems)\r\nexport const unique = array => [...new Set(array)]\r\nexport const isEqual = (array1, array2) => array1.filter((n,i) => n === array2[i]).length === array1.length\r\nexport const combine = (array1, array2, func) => array1.map(n => array2.map(m=> func(n,m))).flat()\r\nexport const zip = (array1, array2) => array1.map((n,i) => array2[i] ? [n,array2[i]] : null).filter(Boolean)\r\nexport const shuffle = array => {\r\n  const a = [...array]\r\n  for(let i = a.length-1,r;i;i--){\r\n    r = Math.floor((Math.random()*(i+1)));\r\n    [a[i],a[r]] = [a[r],a[i]]\r\n  }\r\n  return a\r\n}\r\n\r\n\r\nconst List = {\r\n  range, alphaRange, takeRange, replicate, cycle, reverse, sort, sum, product, isEmpty, first, last, max, min, replaceAt, replace, insert, append, prepend, remove, removeAt, init, tail, take, drop, unique, isEqual, combine, zip, shuffle\r\n}\r\n\r\nexport default List\r\n","const questions = [\n  {\n    question:\n      \"While travelling at the correct speed limit, another driver attempts to overtake you. What should you do?\",\n    answers: [\n      \"Nothing, let them overtake.\",\n      \"Shout at them and stick 2 fingers up as they pass\",\n      \"Take their details and report them to the Police.\"\n    ]\n  },\n  {\n    question:\n      \"On a long motorway journey, you're feeling sleepy. What should you do?\",\n    answers: [\n      \"Leave the motorway, then stop and rest.\",\n      \"Drive faster so you get to your destination faster.\",\n      \"Pull up on the hard shoulder, put your sleep socks on and have a nap.\"\n    ]\n  },\n  {\n    question: \"You forget to put your glasses on to drive. What should you do?\",\n    answers: [\n      \"Not drive until you get your glasses.\",\n      \"Drive to Barnard Castle to test your eyesight.\",\n      \"Just squint and drive a bit slower than usual.\"\n    ]\n  },\n  {\n    question: \"On a motorway, what is the purpose of the right hand lane?\",\n    answers: [\n      \"For overtaking.\",\n      \"A place to stop if you break down or need a rest.\",\n      \"For driving as fast as possible.\"\n    ]\n  },\n  {\n    question:\n      \"You are approaching a zebra crossing and some pedestrians are waiting to cross, what do you do?\",\n    answers: [\n      \"Slow down and prepare to stop.\",\n      \"Flash your lights and wave to them so they hurry up and cross.\",\n      \"Speed up so they jump out of the way to avoid getting smushed.\"\n    ]\n  },\n  {\n    question: \"Excessive or uneven tyre wear can be caused by what?\",\n    answers: [\n      \"Faulty suspension.\",\n      \"Giving too many lifts to fat people.\",\n      \"Driving in reverse too often.\"\n    ]\n  },\n  {\n    question:\n      \"While driving down a main road, a car pulls out from a side street right in front of you, what do you do?\",\n    answers: [\n      \"Slow down and prepare to stop.\",\n      \"Beep them and flash your lights and swear excessively loudly at them.\",\n      \"Catch up to them at the next set of traffic lights and challenge them to a race.\"\n    ]\n  },\n  {\n    question:\n      \"While driving in slippery and wet conditions, how much of a gap should you leave betwen you and the vehicle in front?\",\n    answers: [\n      \"A four second gap.\",\n      \"You should be close enough that they can see you in their rearview mirror.\",\n      \"Why are you even behind them? Overtake as soon as possible.\"\n    ]\n  },\n  {\n    question:\n      \"While driving in the dark, on a clear night, with oncoming traffic, which lights should you use?\",\n    answers: [\n      \"Dipped headlights.\",\n      \"Full beam headlights.\",\n      \"No lights at all.\"\n    ]\n  },\n  {\n    question:\n      \"The driver behind is following very closely, what should you do?\",\n    answers: [\n      \"Slow down and increase the gap between you and the car in front.\",\n      \" Speed up to increase the gap between you and the car behind.\",\n      \"Slam your brakes on so they smush into the back of you.\"\n    ]\n  },\n  {\n    question: \"When driving in icy conditions, what should you do?\",\n    answers: [\n      \"Drive in the highest gear possible.\",\n      \"Drive as fast as possible.\",\n      \"Use the handbrake to skid round corners.\"\n    ]\n  },\n  {\n    question: \"What makes a road a dual carriageway?\",\n    answers: [\n      \"It has two a central reservation.\",\n      \"You're allowed to drive as fast as you like.\",\n      \"It has two lanes.\"\n    ]\n  },\n  {\n    question:\n      \"What is the maximum speed limit on a motoway if you are towing a trailer?\",\n    answers: [\n      \"60mph.\",\n      \"50mph.\",\n      \"You're not allowed to tow a trailer on the motorway.\"\n    ]\n  },\n  {\n    question: \"When are you allowed to drive on the pavement?\",\n    answers: [\n      \"To drive into a property.\",\n      \"Any time you want to smush some pedestrians.\",\n      \"To get round another vehicle on a single carriagway.\"\n    ]\n  },\n  {\n    question: \"Who are diamond-shaped signs for?\",\n    answers: [\n      \"Tram drivers only.\",\n      \"Everybody needs to follow the signs.\",\n      \"Nobody - signs are for idiots.\"\n    ]\n  },\n  {\n    question: \"What should you do if a farmer herding sheep asks you to stop?\",\n    answers: [\n      \"Stop and switch off your engine.\",\n      \"Ignore them and play dodgems with the sheep.\",\n      \"Beep your horn until the sheep have moved.\"\n    ]\n  },\n  {\n    question:\n      \"You are driving at the speed limit and another driver drives up quickly behind you and flashes their lights. What should you do?\",\n    answers: [\n      \"Let them pass.\",\n      \"Slow down and don't let them pass.\",\n      \"Speed up and don't let them pass.\"\n    ]\n  },\n  {\n    question: \"Which emergency vehicle is fitted with a green flashing light?\",\n    answers: [\n      \"A doctor's car.\",\n      \"Ambulances on the way to a hospital.\",\n      \"Feminist Emergency Trucks.\"\n    ]\n  },\n  {\n    question:\n      \"There is a bus lane on your left. There are no times of operation dispalyed, when can you drive in it?\",\n    answers: [\n      \"Never. It's for busses only at all times.\",\n      \"After 6pm.\",\n      \"Any time, as long as you have passengers like a bus.\"\n    ]\n  },\n  {\n    question: \"What should you do when overtaking a horse and rider?\",\n    answers: [\n      \"Drive past slowly and carefully, leaving plenty of room.\",\n      \"Beep your horn and shout at them until they move out of the way.\",\n      \"Go past as fast as possible, shouting 'Yeehaw!'\"\n    ]\n  },\n  {\n    question:\n      \"When following another vehicle on an unlit road at night, what should you do?\",\n    answers: [\n      \"Use dipped headlights.\",\n      \"Turn your lights off so you don't dazzle them.\",\n      \"Put your lights on full beam so they can see you.\"\n    ]\n  },\n  {\n    question: \"When you come up to a mini-roundabout, what shoud you do?\",\n    answers: [\n      \"Give way to other vehicles on the right.\",\n      \"Give way to other vehicles on the left.\",\n      \"Drive straight over the middle of the roundabout.\"\n    ]\n  },\n  {\n    question:\n      \"You want to reverse into a side road, but you're not sure if it's clear, what should you do?\",\n    answers: [\n      \"Dont' be lazy - get out of the car and check.\",\n      \"Use your rearview and side mirrors to check if it's clear.\",\n      \"Just reverse into the street anyway - anybody in the way will move when they see you coming.\"\n    ]\n  },\n  {\n    question:\n      \"What could happen if you leave your fog lights on when it's not foggy?\",\n    answers: [\n      \"You could get pulled over by the police for breaking the law.\",\n      \"The lights might run out and be no use next time it's foggy.\",\n      \"The engine will lose power because the lights are on for too long.\"\n    ]\n  },\n  {\n    question:\n      \"While driving on a busy main road, you realise you are driving in the wrong direction, what should you do?\",\n    answers: [\n      \"Pull into a side road and turn around.\",\n      \"Slam the car in reverse and drive the way you want to go, but backwards.\",\n      \"Immediately execuate a 3-point turn in the middle of the road.\"\n    ]\n  },\n  {\n    question: \"What difference will having a roof rack on your car make?\",\n    answers: [\n      \"It will increase your car's fuel consumption.\",\n      \"It will make your car go slower.\",\n      \"It means you can carry a canoe, even if it looks a bit silly.\"\n    ]\n  },\n  {\n    question: \"What difference will having a roof rack on your car make?\",\n    answers: [\n      \"It will increase your car's fuel consumption.\",\n      \"It will make your car go slower.\",\n      \"It will decrease your car's chance of being involved in an accident.\"\n    ]\n  },\n  {\n    question:\n      \"When turning left into a side road, what should you look out for the most?\",\n    answers: [\n      \"That you don't smush any pedestrians.\",\n      \"You don't smash the wing mirrors off any parked cars.\",\n      \"You don't accidently bump your car over the curb.\"\n    ]\n  },\n  {\n    question:\n      \"You are driving down a steep hill, what should you look out for the most?\",\n    answers: [\n      \"Drive in a low gear and apply the brakes carefully.\",\n      \"Drive as fast as you can and as close as possible to the car in front.\",\n      \"Take the car out of gear and 'cruise' to save petrol consumption.\"\n    ]\n  },\n  {\n    question:\n      \"As you are driving, you see a bus stopped at a bus stop ahead. What should you do?\",\n    answers: [\n      \"Slow down and be ready to give way to the bus if it pulls out.\",\n      \"Accelerate past the bus, being careful not so smush any passengers as they get off.\",\n      \"Stop behind the bus and wait for it to leave.\"\n    ]\n  },\n  {\n    question:\n      \"You are approaching a roundabout and see a pedestrian about to cross, who should give way?\",\n    answers: [\n      \"You, pedestrains annoyingly always have the right of way.\",\n      \"It depends who was there first.\",\n      \"The pedestrian should give way, they will clearly come off worse if they get hit by a car.\"\n    ]\n  },\n  {\n    question:\n      \"If you have to slow down suddenly on a motorway because of a hazard, what should you do to warn other drivers?\",\n    answers: [\n      \"Turn on your hazard warning lights.\",\n      \"Beep your horn and flash your headlights.\",\n      \"There's no need to warn them, they'll see the hazard themselves.\"\n    ]\n  },\n  {\n    question: \"When driving through a flooded area, what should you do?\",\n    answers: [\n      \"Test your brakes as soon as possible.\",\n      \"Get out of the car and swim.\",\n      \"Drive faster to splash pedestrians as much as possible.\"\n    ]\n  },\n  {\n    question: \"When does a new car need an MOT certificate?\",\n    answers: [\n      \"Three years after purchase.\",\n      \"One year after purchase.\",\n      \"Before it is sold to somebody else.\"\n    ]\n  },\n  {\n    question:\n      \"What is the national speed limit on the outside lane of a motorway?\",\n    answers: [\n      \"70mph.\",\n      \"100mph.\",\n      \"You can drive as fast as you like in the outside lane.\"\n    ]\n  },\n  {\n    question: \"What should the left-hand lane of the motorway be used for?\",\n    answers: [\n      \"Driving like a normal person.\",\n      \"It's should only be used by slow drivers and lorries.\",\n      \"It is reserved cars about to leave the motorway at the next junction.\"\n    ]\n  },\n  {\n    question:\n      \"If you are involved in a traffic accident, what is the first thing you should you do?\",\n    answers: [\n      \"Stop and wait at the scene.\",\n      \"Get away from the scene as quickly as possible.\",\n      \"Phone your insurance company and say you have whiplash.\"\n    ]\n  },\n  {\n    question:\n      \"You are stuck behind a cyclist at traffic lights. What should you do when the lights change?\",\n    answers: [\n      \"Give the cyclist lots of time and room to move.\",\n      \"Beep your horn to make sure they know the lights have changed and get moving quickly.\",\n      \"Drive around them quickly to make sure you get through the lights.\"\n    ]\n  },\n  {\n    question:\n      \"A police officer flashes their headlights at you and points left, what should you do?\",\n    answers: [\n      \"Pull over as soon as possible.\",\n      \"Wave back at them.\",\n      \"Turn left at the next junction.\"\n    ]\n  },\n  {\n    question:\n      \"You are driving behind a large truck and it indicates right, but starts to move left, what should you do?\",\n    answers: [\n      \"Slow down and give it time to turn.\",\n      \"Beep your horn to alert them they are moving the wrong way.\",\n      \"Overtake them quickly so you're not in the way.\"\n    ]\n  },\n  {\n    question:\n      \"How many years do you need to have held a full driving license before you can supervise learner drivers?\",\n    answers: [\n      \"Three years.\",\n      \"Five years.\",\n      \"You can supervise learner drivers as soon as you've passed your test.\"\n    ]\n  },\n  {\n    question:\n      \"If you are overtaking a motorcyclist in strong winds what should you do?\",\n    answers: [\n      \"Give as wide a berth as possible as you breeze by.\",\n      \"Breeze past as fast as possible to minimise the time it takes.\",\n      \"Breeze past as close to the motorcylist as possible.\"\n    ]\n  },\n  {\n    question: \"When approaching an unmarked crossroads, who has right of way?\",\n    answers: [\n      \"Nobody, so be prepared to stop and give way.\",\n      \"Whichever vehicle gets there first.\",\n      \"The biggest vehicle.\"\n    ]\n  },\n  {\n    question:\n      \"It is miffing it down on the motorway and visibility is bad, what should you do?\",\n    answers: [\n      \"Turn on your dipped headlights.\",\n      \"Turn on your fog lights.\",\n      \"Drive as fast as possible to make lots of water spray up.\"\n    ]\n  },\n  {\n    question:\n      \"Your mobile phone rings while you're driving. When is it okay to answer?\",\n    answers: [\n      \"When you have pulled over and stopped the engine.\",\n      \"If it's an important call from your Mum or Dad.\",\n      \"If there are no other vehicles on the road.\"\n    ]\n  },\n  {\n    question: \"What must you do if you want to park on a 40mph road at night?\",\n    answers: [\n      \"Park on the left with your parking lights on.\",\n      \"Park on the right with your parking lights on.\",\n      \"Park on any side with no lights on.\"\n    ]\n  },\n  {\n    question:\n      \"When driving in good and dry conditions, how far away from the car in front should you be?\",\n    answers: [\n      \"Two seconds.\",\n      \"You should be as close as possible as it is more fuel efficient.\",\n      \"Two car lengths.\"\n    ]\n  },\n  {\n    question:\n      \"While driving on a main road, a car cuts right in front of you. What should you do?\",\n    answers: [\n      \"Slow down to increase the distance between you and them.\",\n      \"Overtake them at the next opportunity.\",\n      \"Beep your horn at them and flash your lights to make sure they know you're there.\"\n    ]\n  },\n  {\n    question: \"Which of the following vehicles use a blue flashing light?\",\n    answers: [\n      \"Bomb disposal vehicle.\",\n      \"Motorway maintenance vehicle.\",\n      \"Snow ploughs.\"\n    ]\n  },\n  {\n    question:\n      \"You're being followed by an ambulance with blue flashing lights, what should you do?\",\n    answers: [\n      \"Pull over as soon as it's safe to do so.\",\n      \"Slam on the brakes and stop as soon as possible.\",\n      \"Drive faster and try and outrun it.\"\n    ]\n  },\n  {\n    question:\n      \"You're travelling along this narrow country road. How should you pass the cyclist?\",\n    answers: [\n      \"Leave plenty of room as you pass.\",\n      \"Beep your horn at them so they know you're there.\",\n      \"Go past as quickly as possibly so they know you are the faster vehicle.\"\n    ]\n  },\n  {\n    question: \"What should you do before stopping?\",\n    answers: [\n      \"Check your mirrors and signal.\",\n      \"Beep your horn three times.\",\n      \"Take the car out of gear.\"\n    ]\n  },\n  {\n    question:\n      \"What should you do when you're approaching traffic lights that have been on green for some time?\",\n    answers: [\n      \"Be ready to stop.\",\n      \"Accelerate towards them to make sure you make it through.\",\n      \"Slam your brakes on in case they change.\"\n    ]\n  },\n  {\n    question:\n      \"Why should you never wave people across at pedestrian crossings?\",\n    answers: [\n      \"Another vehicle might be coming and smush them.\",\n      \"Why are you letting them go? If you have right of way, take it.\",\n      \"They might think you're trying to make friends with them.\"\n    ]\n  },\n  {\n    question:\n      \"What's the purpose of road humps, chicanes and narrowings?\",\n    answers: [\n      \"To slow traffic down in congested areas.\",\n      \"To make driving as frustrating as possible.\",\n      \"To damage your car's suspension.\"\n    ]\n  },\n  {\n    question:\n      \"How does old age affect an drivers's driving ability?\",\n    answers: [\n      \"Their reactions slow down as they get older.\",\n      \"Older drivers are far superior - especially drivers in their forties.\",\n      \"They get annoyed at the smallest things and shout abuse at younger drivers.\"\n    ]\n  },\n  {\n    question:\n      \"What should you do if you want to overtake a tractor but aren't sure that it's safe?\",\n    answers: [\n      \"Wait behind it if you're not sure.\",\n      \"Keep beeping your horn until it pulls over.\",\n      \"Speed round it quickly, it's only a tractor and goes about 3mph.\"\n    ]\n  },\n  {\n    question:\n      \"What does this sign mean?\",\n      image: \"minspeed.gif\",\n    answers: [\n      \"End of minimum speed limit.\",\n      \"Don't drive over 30mph.\",\n      \"No slow coaches allowed - make sure you drive faster than 30mph.\"\n    ]\n  },\n  {\n    question:\n      \"What does this sign mean?\",\n      image: \"pedestrians.jpeg\",\n    answers: [\n      \"Warning - people may be walking in the road.\",\n      \"Warning - children are sometimes abducted in this area.\",\n      \"OG holding hands with Tommy Shelby.\"\n    ]\n  },\n  {\n    question:\n      \"What does this sign mean?\",\n      image: \"vehicles.jpeg\",\n    answers: [\n      \"No vehicles allowed.\",\n      \"Warning - flying motorbikes in the area.\",\n      \"Only cars and motorbikes allowed on this road.\"\n    ]\n  },\n];\n\nexport default questions;\n","import \"./styles.css\"\nimport Nanny from \"nanny-state\"\nimport { shuffle } from \"jog-list\"\nimport QUESTIONS from \"./questions.js\"\n\nconst vroom = new Audio(\"../sounds/vroom.wav\")\nconst screech = new Audio(\"../sounds/screech.wav\")\nconst horn = new Audio(\"../sounds/horn.wav\")\n\nconst View = state => {\n  // event handle\n  const submitAnswer = answer => event => {\n    console.log(state.questions.length)\n    const correct = answer === state.questions[state.questionNumber].answers[0]\n    const index = QUESTIONS.findIndex(x => x.question === state.questions[state.questionNumber].question)\n    if (correct) {\n      vroom.play()\n      setTimeout(_ => {\n        vroom.pause()\n        vroom.currentTime = 0\n      }, 1950)\n    } else {\n      screech.play()\n      setTimeout(_ => {\n        screech.pause()\n        screech.currentTime = 0\n      }, 1000)\n    }\n    state.Update({\n      score: correct ? state.score + 1 : state.score,\n      fredback: correct ? \"Correct!\" : \"Wrong!\",\n      questionNumber: state.questionNumber + 1,\n      mistakes: correct ? state.mistakes.filter((_,i) => i !== index) : [...state.mistakes,index]\n    })\n  }\n\n  const playAgain = mistakes => event => {\n    horn.play()\n    state.Update({...State,questions: mistakes ? shuffle(QUESTIONS.filter((_,i) => state.mistakes.includes(i))): shuffle(QUESTIONS)});\n  }\n  const result = (score,total) => \n    score/total < .2\n      ? \"Oh dear, you'd probably manage to crash in a stationary vehicle\"\n      : score/total < .6\n      ? \"Not great, you should stick to Mario Kart\"\n      : score/total < 1\n      ? \"Not bad, you probably won't smush into anyone at least\"\n      : \"Yeehaw! You're practically an F1 driver!\"\n  // View code\n  return state.HTML`\n<h1><span class=\"JOG\"><span class=\"J\">J</span>O<span class=\"G\">G</span></span> Driving Schoo<span id=\"L-plate\">l</span></h1>\n<div id=\"game\">\n<h2 id=\"score\">Score: ${state.score}</h2>\n${\n  state.questionNumber < state.questions.length && state.questionNumber < 10\n    ? state.HTML`<p id=\"question\">${state.questionNumber + 1}) ${\n        state.questions[state.questionNumber].question\n      }${state.questions[state.questionNumber].image ? state.HTML`<img src=${`../images/${state.questions[state.questionNumber].image}`} alt=\"road sign\">` : \"\"}</p>\n<div id=\"answers\">\n${shuffle(state.questions[state.questionNumber].answers).map(\n  (answer) =>\n    state.HTML`<button onclick=${submitAnswer(answer)}>${answer}</button>`\n)}   \n</div>\n<h2 id=\"fredback\">${state.fredback}</h2>\n`\n    : state.HTML`<div id=\"game-over\">\n      <h2>${result(state.score,state.questionNumber)}</h2>\n      <h2>Why don't you have another go?</h2>\n    </div>\n<button onclick=${playAgain(false)}>All Questions</button>\n${state.mistakes.length ? state.HTML`<button onclick=${playAgain(true)}>Practice Your Mistakes</button>`:\"\"}`\n}\n<div id=\"car\" style=${`left: ${state.screenSize/10 * state.score}px`}></div>\n</div>\n<footer>\n  <p>Another beatifully unconventional <span class=\"JOG\"><span class=\"J\">J</span>O<span class=\"G\">G</span></span> production made with 💜 in <a href=\"https://github.com/daz4126/Nanny-State\" title=\"Nanny State\">Nanny State</a>.</p>\n  <p><small><a href=\"https://www.flaticon.com/free-icons/car\" title=\"car icons\">Car icons created by DinosoftLabs - Flaticon</a></small></p>\n  </footer>`\n}\n\nconst State = {\n  questions: shuffle(QUESTIONS),\n  score: 0,\n  questionNumber: 0,\n  mistakes: [],\n  screenSize: window.innerWidth,\n  fredback: \"Hope this helps you smush your theory OG! xx\",\n  View\n}\n// start the Nanny State!\nNanny(State)\n"]}